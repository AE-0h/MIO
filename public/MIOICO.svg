<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg9"
   width="615.21405"
   height="645.8006"
   viewBox="0 0 615.21405 645.8006"
   sodipodi:docname="Desktop.svg"
   inkscape:version="1.2 (dc2aeda, 2022-05-15)"
   inkscape:export-filename="mio/public/MIOICO.svg"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   inkscape:dataloss="true"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs13">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient502"
       gradientUnits="userSpaceOnUse"
       x="123.67729"
       y="122.34743">
      <meshrow
         id="meshrow3616">
        <meshpatch
           id="meshpatch3618">
          <stop
             path="c 226.077,51.8647  275.279,-75.802  485.4,-22.6077"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop3620" />
          <stop
             path="c 0.00204331,215.438  99.7421,393.645  43.8857,609.078"
             style="stop-color:#d5ffd5;stop-opacity:1"
             id="stop3622" />
          <stop
             path="c -204.798,0.00222018  -504.014,35.9085  -565.192,-102.399"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop3624" />
          <stop
             path="c 9.31539,-242.039  35.9124,-268.635  35.9063,-484.071"
             style="stop-color:#d5ffd5;stop-opacity:1"
             id="stop3626" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     id="namedview11"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     showgrid="false"
     inkscape:zoom="0.75195696"
     inkscape:cx="327.81132"
     inkscape:cy="285.92062"
     inkscape:window-width="2048"
     inkscape:window-height="1056"
     inkscape:window-x="0"
     inkscape:window-y="25"
     inkscape:window-maximized="0"
     inkscape:current-layer="layer1" />
  <g
     inkscape:groupmode="layer"
     id="layer1"
     inkscape:label="Image 1"
     transform="translate(-77.213682,-78.431265)">
    <rect
       style="fill:url(#meshgradient502);fill-opacity:1;fill-rule:evenodd;stroke-width:0.895013"
       id="rect234"
       width="614.39691"
       height="646.3136"
       x="78.461937"
       y="77.13208"
       ry="0.093282148"
       inkscape:label="rect234" />
  </g>
  <g
     inkscape:groupmode="layer"
     inkscape:label="Image"
     id="g15"
     transform="translate(-77.213682,-78.431265)">
    <path
       id="path179"
       style="fill:#000000;stroke-width:1.00258"
       d="m 372.53906,78.521484 c -185.68079,0.315798 -175.2446,0.04228 -195.50586,5.123047 -29.61049,7.425209 -58.33605,27.081659 -73.34961,50.193359 -12.025913,18.51259 -18.046597,33.20977 -23.416012,57.16406 l -2.599609,11.59961 -0.345703,172.98633 c -0.362799,181.73611 0.02683,204.97151 3.61914,216.22852 1.084598,3.39873 2.475283,8.44887 3.091797,11.22265 1.638968,7.37406 8.519334,22.684 13.296875,29.58789 18.327942,26.4853 44.675962,48.64027 71.650392,60.25 6.39033,2.75042 6.69192,3.03359 6.34765,5.94922 -0.19879,1.68368 -0.0159,3.9686 0.40626,5.07813 0.78013,2.05023 6.95256,6.33859 6.98046,4.84961 0.008,-0.44744 0.34537,-0.33926 0.74805,0.24218 1.18939,1.7174 18.42053,6.24968 30.62695,8.05469 1.64429,0.24315 5.00821,0.90835 7.47461,1.47852 9.16531,2.11871 35.09528,4.03176 63.21094,4.66406 15.93241,0.35831 29.09012,0.75147 29.23828,0.87305 0.60953,0.50021 144.31326,-0.23455 169.64063,-0.86719 24.97603,-0.62388 31.2496,-0.94213 43.34961,-2.20313 2.19235,-0.22848 8.91825,-0.90992 14.94726,-1.51562 14.59762,-1.46651 38.46574,-4.92463 39.79492,-5.76563 0.58473,-0.36996 1.78742,-0.78801 2.67188,-0.92773 0.88444,-0.13972 2.90241,-0.79376 4.48437,-1.45313 1.58196,-0.65934 3.21198,-1.12475 3.62305,-1.03515 0.41107,0.0896 0.74805,-0.29095 0.74805,-0.84571 0,-0.55474 0.61803,-1.00976 1.37304,-1.00976 2.23764,0 3.65522,-2.52245 4.26954,-7.59961 0.41022,-3.39029 0.25245,-4.57059 -0.54102,-4.07422 -0.61431,0.38428 -1.11523,0.22313 -1.11523,-0.35742 0,-0.9824 7.17735,-6.12305 8.54882,-6.12305 0.69874,0 9.07473,-5.01626 20.84766,-12.48437 22.57239,-14.31873 38.9787,-32.77495 50.76563,-57.10547 6.30139,-13.00739 9.57845,-23.54211 13.17578,-42.3711 1.73557,-9.0841 1.83007,-19.20522 1.83007,-194.67187 0,-171.79043 -0.12313,-185.52349 -1.70898,-191.14063 -0.93972,-3.32854 -2.85974,-10.78067 -4.26758,-16.56054 -2.74302,-11.2615 -3.61883,-13.66518 -9.17578,-25.15625 -7.48113,-15.47005 -17.99642,-28.76402 -31.85351,-40.27149 -8.54685,-7.0976 -25.59119,-18.373043 -27.77344,-18.373043 -0.5941,0 -2.84755,-0.850189 -5.00586,-1.888672 -5.10414,-2.455894 -19.88031,-6.629642 -32.82227,-9.271484 -12.05694,-2.461183 -37.28052,-2.761784 -207.28125,-2.472657 z m 15.43555,48.029296 c 10.785,0.17969 21.2196,0.7842 22.08594,1.66211 0.69743,0.70675 3.68254,1.26172 6.79101,1.26172 3.64302,0 6.82091,0.69329 9.26563,2.01953 2.0468,1.11036 3.94622,2.01647 4.2207,2.01563 8.35337,-0.0255 8.52895,0.0187 9.4082,2.35937 0.74822,1.99191 1.61038,2.37174 5.52735,2.43164 2.55305,0.0391 5.39509,0.72965 6.31445,1.53516 0.91935,0.80552 3.20081,1.75773 5.07031,2.11523 1.86948,0.35751 4.02597,1.55461 4.79102,2.66016 0.76505,1.10554 2.20708,2.00976 3.20508,2.00976 0.99801,0 2.32758,0.62729 2.95508,1.39258 0.62747,0.76527 2.4811,1.66255 4.11914,1.99414 1.86786,0.37812 3.40463,1.55057 4.12304,3.14649 0.6362,1.41327 1.98372,2.54492 3.0293,2.54492 1.03544,0 3.09225,0.6308 4.57226,1.40039 1.97577,1.02737 7.59104,1.43613 21.12696,1.53906 18.73781,0.1425 24.95992,0.68641 25.98047,2.26953 0.31276,0.48518 4.5746,1.57893 9.46875,2.43164 4.8941,0.8527 10.59378,2.4332 12.66601,3.51172 2.07224,1.07851 4.81119,1.96094 6.08789,1.96094 1.28409,0 3.97376,1.57639 6.01953,3.5293 2.03404,1.94164 4.49459,3.53125 5.4668,3.53125 0.97222,0 2.57827,0.90808 3.57031,2.01757 2.06053,2.30455 8.84335,2.80913 10.15625,0.75586 0.44342,-0.69342 1.49596,-6.02656 2.33985,-11.85156 1.35008,-9.31877 1.76942,-10.59179 3.48828,-10.5918 1.73574,10e-6 2.04235,1.01061 2.7539,9.05469 0.61637,6.96798 1.24738,9.47314 2.74024,10.88086 1.0668,1.00596 1.94141,2.65878 1.94141,3.67188 0,1.0131 0.83852,2.92505 1.86328,4.24804 1.02478,1.32303 2.19304,3.99389 2.59765,5.93555 0.40458,1.94167 1.58405,4.94603 2.6211,6.67578 1.03707,1.72977 1.88672,4.23198 1.88672,5.56055 0,1.53758 0.81495,2.7764 2.24218,3.41015 2.48153,1.10195 3.3938,6.18831 4.03711,22.49805 0.30447,7.71937 0.5244,8.48556 2.75586,9.60742 1.33366,0.67049 2.5625,2.19464 2.73242,3.38868 0.16993,1.19401 0.95494,2.71398 1.74414,3.37695 1.10421,0.92755 1.43646,4.02477 1.43946,13.4375 0.002,6.72788 0.29483,18.66873 0.65039,26.53516 0.63461,14.04066 0.68911,14.31411 3.05078,14.91406 1.57654,0.40049 2.29436,1.20671 2.08203,2.33984 -0.23821,1.27129 -1.63986,1.86359 -5.29687,2.23438 l -4.97461,0.5039 0.33593,59.00586 c 0.18505,32.45348 0.67829,91.91465 1.09571,132.13477 0.41744,40.22011 0.56768,77.22363 0.33398,82.23047 -0.38462,8.23972 -0.22907,9.28379 1.64453,11 1.13848,1.04285 2.07032,2.81113 2.07032,3.92968 0,1.11855 0.61915,2.75113 1.375,3.62696 1.82851,2.11876 10.58398,19.37106 10.58398,20.85547 0,0.64151 0.672,1.73125 1.49414,2.42187 0.82215,0.69062 1.49609,2.56188 1.49609,4.1582 0,1.59636 0.43892,2.90235 0.97657,2.90235 0.53765,0 1.2554,1.11634 1.59375,2.48047 0.33826,1.36412 1.24338,3.00884 2.01171,3.65429 3.11277,2.61478 1.50894,5.65475 -7.96093,15.09571 -5.14675,5.13099 -10.1916,9.77328 -11.21094,10.31445 -1.01935,0.54119 -2.30332,1.54216 -2.85352,2.22461 -0.55019,0.68245 -2.02105,1.56831 -3.26757,1.96875 -2.04092,0.65565 -2.56302,0.0671 -5.24414,-5.91797 -1.94651,-4.34518 -2.76824,-7.48638 -2.375,-9.07227 0.44952,-1.81275 0.0763,-2.7105 -1.47852,-3.55273 -1.14431,-0.61987 -2.09252,-1.67762 -2.10742,-2.35156 -0.0148,-0.67393 -2.03814,-3.49575 -4.4961,-6.26953 -2.45792,-2.77381 -5.47431,-6.51528 -6.70117,-8.31446 -1.22685,-1.79919 -2.78949,-3.27334 -3.47461,-3.27734 -1.7161,-0.009 -1.65991,0.19379 1.91016,6.77734 4.79247,8.83789 6.80745,13.15489 6.81445,14.59961 0.003,0.72025 2.24536,3.77075 4.98242,6.77735 2.73711,3.00656 4.97657,6.31091 4.97657,7.34375 0,1.03284 0.67395,2.13966 1.49609,2.45898 2.55559,0.9926 1.67785,2.18147 -3.57812,4.85352 -5.14536,2.61575 -6.88672,2.6141 -6.88672,-0.01 0,-1.96014 -1.47827,-1.83082 -3.58594,0.3125 -1.6323,1.65991 -11.37877,4.5977 -12.27149,3.69922 -0.87569,-0.88136 1.88516,-5.28054 6.6211,-10.55078 4.96203,-5.52189 7.24414,-8.98184 7.24414,-10.98633 0,-1.86917 -1.63148,-1.18007 -5.3418,2.25977 -6.74167,6.25024 -22.34176,14.36946 -24.13086,12.55859 -0.30837,-0.31212 1.37349,-6.24847 3.73828,-13.19336 2.36481,-6.94488 3.91917,-13.00502 3.45313,-13.46484 -0.46604,-0.45983 -2.03452,0.74997 -3.48438,2.6875 -3.76731,5.03456 -11.24438,13.12109 -12.13281,13.12109 -0.41446,0 -1.02219,-0.70667 -1.34961,-1.57031 -0.63779,-1.68225 1.53422,-18.20445 3.71094,-28.23438 0.7281,-3.35522 1.02238,-6.96917 0.6543,-8.03125 -0.60378,-1.74219 -0.84559,-1.6393 -2.48047,1.05664 -7.22217,11.90971 -7.87325,12.4866 -8.77735,7.7793 -0.965,-5.02452 1.26347,-38.86568 3.3125,-50.29492 1.1334,-6.32186 1.92659,-14.67761 1.81836,-19.16406 -0.10553,-4.37529 0.13647,-9.38656 0.53711,-11.13672 1.00608,-4.395 -0.76056,-5.07404 -3.4082,-1.31055 -3.19469,4.54108 -3.33905,3.09588 -0.36914,-3.67383 2.54223,-5.79478 4.65632,-19.15031 2.69922,-17.05078 -0.51712,0.55476 -2.20325,4.35258 -3.7461,8.43945 -5.4599,14.46294 -16.85181,28.35036 -32.52343,39.65039 -10.83759,7.81449 -26.4341,14.95118 -32.67578,14.95118 h -2.55665 l 2.46485,-1.73829 c 3.45126,-2.4354 7.94336,-7.54662 7.94336,-9.0371 0,-1.82933 3.38591,-4.78516 13.45508,-11.7461 18.83323,-13.01967 32.24862,-30.24065 34.66015,-44.49023 0.99331,-5.86939 0.87933,-7.42744 -1.02148,-13.92774 -2.3367,-7.99093 -5.94117,-15.03027 -12.61524,-24.64062 -4.14269,-5.96534 -4.34389,-6.59983 -4.81836,-15.12891 -0.36013,-6.47357 -0.14149,-9.31819 0.80274,-10.42383 0.94386,-1.1053 1.19995,-4.41052 0.93555,-12.10351 -0.43624,-12.69232 1.40421,-18.22775 6.68164,-20.08985 5.39196,-1.90248 9.89238,-6.19004 12.46289,-11.87304 1.35731,-3.00082 3.34785,-5.99961 4.42187,-6.66407 1.07404,-0.66445 2.82882,-2.63261 3.90039,-4.37304 3.304,-5.36632 0.42021,-8.46468 -5.76953,-6.19922 -5.50591,2.0152 -6.25359,0.0739 -6.27539,-16.29688 -0.0197,-14.78013 -1.69991,-29.13742 -4.9043,-41.91796 -2.98593,-11.90933 -2.82302,-13.32334 1.75586,-15.17774 6.5156,-2.63873 14.54212,-15.34738 16.21485,-25.67383 0.40438,-2.4964 0.33441,-8.97657 -0.15625,-14.40039 -2.18538,-24.15738 -16.21368,-42.98081 -41.33594,-55.46484 -11.15332,-5.54244 -13.0317,-6.25614 -22.87891,-8.69336 -39.45804,-9.76598 -82.48492,-2.81902 -130.54492,21.07617 -28.64113,14.24024 -47.03233,28.0117 -72.74805,54.47656 -21.11694,21.73215 -26.41474,25.62447 -26.40234,19.39649 0.0124,-6.20027 2.06731,-10.21081 8.74414,-17.06836 3.68809,-3.7879 10.40001,-11.02974 14.91602,-16.0918 9.74163,-10.91952 22.17433,-23.25087 31.14453,-30.89453 9.4766,-8.07517 37.3012,-25.96875 40.38281,-25.96875 0.74452,0 1.63,-0.45305 1.96875,-1.00781 0.33873,-0.55476 1.50099,-1.00781 2.58203,-1.00781 1.08104,0 2.22358,-0.68153 2.53906,-1.51368 0.3155,-0.83214 1.20366,-1.51367 1.97461,-1.51367 0.77093,0 2.18108,-0.40462 3.13282,-0.90039 5.54802,-2.89007 25.2149,-9.71542 36.47461,-12.6582 22.18946,-5.79933 47.28712,-6.85162 70.88867,-2.9707 15.93156,2.61966 40.38573,12.64713 50.46875,20.69335 3.46528,2.76529 5.83594,3.67025 5.83594,2.22852 -10e-6,-0.92079 -12.11399,-12.44336 -13.08204,-12.44336 -0.42926,0 -2.44745,-1.14581 -4.48437,-2.54492 -11.22552,-7.71049 -27.97644,-13.32287 -48.20508,-16.15039 -34.03698,-4.75763 -70.10321,2.43221 -109.12109,21.75 -14.46796,7.16308 -33.13396,19.00653 -44.34571,28.13867 -18.06864,14.71719 -40.20092,38.11625 -51.82031,54.78516 -3.42254,4.90979 -3.4866,5.18545 -3.4082,14.71679 l 0.0801,9.71289 6.30273,1.02735 c 8.66568,1.41371 9.65272,2.97375 10.96289,17.30859 0.69696,7.62617 0.70545,15.88828 0.0254,25.7207 -1.5127,21.87018 -2.39665,24.572 -9.13672,27.94727 -2.32036,1.16201 -4.34923,1.98278 -4.50781,1.82227 -0.15858,-0.16052 -0.77736,-3.89268 -1.375,-8.29297 -1.24543,-9.16982 -2.24023,-10.94682 -3.72266,-6.64258 -1.08669,3.15529 -3.22068,4.78599 -7.27343,5.55859 -10.85442,2.06923 -11.61486,2.5436 -17.36914,10.85547 -3.0274,4.37298 -7.31736,9.16685 -9.53516,10.65234 -2.89316,1.93789 -3.89753,3.226 -3.55273,4.56055 0.35619,1.37867 -0.39942,2.23288 -2.91993,3.29883 -1.87031,0.79098 -3.40039,2.07435 -3.40039,2.85156 0,0.77722 -1.40491,3.37551 -3.12109,5.77344 -8.25397,11.53289 -12.8176,26.34365 -10.90234,35.38281 0.92373,4.35975 5.48545,15.02735 6.42578,15.02735 0.18755,0 0.29212,-3.51899 0.23242,-7.81836 -0.0993,-7.14474 0.2513,-8.61996 4.07422,-17.1543 3.46721,-7.74032 12.26976,-21.42578 13.78125,-21.42578 0.4547,0 -0.24819,2.46937 -1.57813,5.54687 -2.27771,5.27068 -4.92578,14.90215 -4.92578,17.91211 v 3.34961 l 5.875,-0.041 c 6.4948,-0.0435 9.00102,-1.54943 11.0957,-6.66797 0.66467,-1.62418 1.56436,-2.95313 1.99805,-2.95313 0.43368,0 2.01743,3.2905 3.51953,7.3125 3.02793,8.10751 8.76872,18.63619 12.97071,23.78321 2.30778,2.82681 2.88141,3.10461 3.625,1.75976 0.48562,-0.87833 2.04495,-2.84257 3.46679,-4.36523 l 2.58594,-2.76953 -0.65234,3.4414 c -0.35849,1.89252 -1.25838,4.67109 -2,6.17578 -1.33446,2.70749 -0.5955,6.01758 1.34375,6.01758 0.48316,0 1.99284,-3.51702 3.35546,-7.8164 2.76778,-8.73284 6.26011,-16.39258 7.47461,-16.39258 1.47668,0 5.02403,4.53164 6.67188,8.52343 1.5824,3.83328 5.66515,10.09389 7.92578,12.1543 2.12528,1.93706 7.54092,10.56002 12.22461,19.46289 4.74697,9.02312 11.95049,21.73906 15.71484,27.74024 2.33216,3.71791 12.76027,10.29769 29.09375,18.35547 10.77822,5.31718 11.16928,5.62265 10.64063,8.31054 -0.63311,3.21903 2.79184,9.14037 6.31445,10.91797 2.01551,1.01706 2.05554,1.21904 0.54102,2.75195 -1.51453,1.53294 -1.49313,1.70202 0.28711,2.31641 4.23625,1.46204 10.39062,4.6817 10.39062,5.43555 0,0.44057 -1.00897,1.0885 -2.24219,1.43945 -3.35943,0.95605 -1.04008,1.95677 12.11133,5.22656 9.34899,2.32442 11.99803,3.41605 14.94727,6.1543 1.97158,1.83055 5.49091,4.35109 7.82031,5.60352 2.32941,1.25239 4.23438,2.62009 4.23438,3.03711 0,1.49102 -23.82356,0.72091 -39.83399,-1.28711 -18.55959,-2.32777 -35.23519,-6.26555 -51.8457,-12.24415 -12.11429,-4.36026 -27.91864,-11.26266 -34.45313,-15.04492 -2.15253,-1.24592 -5.15298,-2.90634 -6.66601,-3.6914 -1.51302,-0.78504 -2.53404,-1.78165 -2.26953,-2.21485 0.26452,-0.4332 -3.20643,-3.45557 -7.71289,-6.71679 -37.45002,-27.10165 -65.4351,-56.67801 -79.07422,-83.56836 -2.1228,-4.18522 -4.25836,-7.61128 -4.7461,-7.61328 -0.854,-0.004 -0.41289,6.47701 0.97852,14.36914 0.75941,4.30734 -0.1701,4.75619 -3.60352,1.74218 -3.10462,-2.72538 -3.90079,-1.16072 -2.73828,5.38672 1.22499,6.89941 5.33428,17.27891 8.98242,22.69141 3.77048,5.59392 17.24136,22.69963 21.99219,27.92578 3.31852,3.6505 4.42736,5.54688 3.24414,5.54687 -1.10398,0 -22.45749,-22.91108 -24.55469,-26.3457 -0.38108,-0.62409 -1.15206,-0.96607 -1.71484,-0.75976 -1.545,0.56637 29.51163,40.20184 43.27344,55.22656 12.61148,13.7688 17.67937,21.78374 22.08008,34.91992 2.50369,7.47363 5.19726,20.44074 5.19726,25.02344 0,4.6212 -1.87768,9.77539 -3.56055,9.77539 -0.75442,0 -2.107,1.43985 -3.00585,3.19922 -1.51801,2.9712 -1.70994,3.05989 -2.68946,1.25976 -4.57018,-8.39886 -5.729,-10.11921 -7.71093,-11.45117 l -2.25,-1.51172 0.70507,12.06836 c 0.39766,6.79974 0.30943,13.14886 -0.20312,14.54102 l -0.91016,2.4707 -1.5,-2.4707 c -0.82536,-1.35909 -2.7071,-4.6266 -4.18164,-7.26172 -4.47352,-7.99455 -5.77754,-6.18872 -4.53515,6.28516 1.29814,13.03389 0.20289,13.30588 -7.17969,1.7832 l -5.33203,-8.32031 -0.3086,4.90039 c -0.24552,3.90469 -0.71332,5.00755 -2.30078,5.42773 -1.71989,0.45522 -1.95114,1.23374 -1.68555,5.68945 0.27328,4.5852 0.0762,5.19764 -1.77148,5.46485 -1.14415,0.16547 -2.65707,-0.4028 -3.36133,-1.26172 -0.70428,-0.85891 -1.76797,-1.56055 -2.36523,-1.56055 -0.59726,0 -3.00759,-1.90989 -5.35547,-4.24219 -3.32838,-3.30628 -4.53314,-3.97237 -5.46875,-3.02539 -1.93906,1.96265 -3.26135,1.38932 -1.45508,-0.63086 1.86807,-2.08926 2.22378,-6.2246 0.53516,-6.2246 -0.61306,0 -5.04474,3.63221 -9.84766,8.07031 -8.97399,8.29232 -12.98514,10.05396 -14.39844,6.32617 -0.49385,-1.30265 1.61675,-3.94128 8.36524,-10.4668 4.96336,-4.79938 9.02344,-9.12598 9.02343,-9.61523 1e-5,-0.48925 -1.16668,-2.16311 -2.59179,-3.71875 -2.2585,-2.4653 -2.80132,-2.64993 -4.23438,-1.44141 -0.90429,0.76258 -6.02987,5.13238 -11.39062,9.71094 -7.63996,6.52516 -10.31216,8.25562 -12.35742,8.00781 -5.2457,-0.63563 -5.0013,-3.06626 0.875,-8.6914 2.99291,-2.86502 8.43382,-7.50139 12.08984,-10.30274 3.65602,-2.80134 6.64648,-5.2799 6.64648,-5.50781 0,-0.22791 -1.52207,-2.09654 -3.38281,-4.15235 l -3.38281,-3.73632 -7.66992,6.45508 c -4.2182,3.5505 -10.37751,8.42964 -13.6875,10.84179 l -6.01758,4.38477 -2.61133,-1.96485 c -2.83734,-2.13578 -4.10762,-6.30273 -1.92187,-6.30273 0.72884,0 2.53401,-1.13461 4.01171,-2.52148 1.47775,-1.38691 3.13868,-2.52149 3.69141,-2.52149 0.55274,0 1.48561,-0.90805 2.07227,-2.01758 0.58666,-1.10952 1.6115,-2.02962 2.27734,-2.04492 0.66584,-0.0158 3.21167,-1.83185 5.6582,-4.03516 2.44659,-2.20327 4.80151,-4.00585 5.23243,-4.00585 1.71669,0 0.64109,-2.88847 -1.63868,-4.4004 -2.34092,-1.55248 -2.62848,-1.44635 -8.54492,3.16211 -3.36702,2.62271 -6.90784,5.22493 -7.86914,5.78321 -2.08742,1.2123 -5.08008,4.14894 -5.08008,4.98437 0,0.32716 1.07238,0.32363 2.38282,-0.01 1.31042,-0.3329 2.68068,-0.11533 3.04687,0.48437 0.36619,0.59972 -0.0106,1.0918 -0.83789,1.0918 -0.82725,0 -1.91072,0.73502 -2.4082,1.63476 -0.79566,1.43909 -1.09811,1.35616 -2.51367,-0.68945 -1.43446,-2.07289 -1.86782,-2.18413 -3.9961,-1.03125 -3.52801,1.9111 -5.72837,1.04934 -8.80078,-3.44922 -3.51247,-5.14286 -3.48777,-6.1691 0.20703,-8.44336 l 3.02539,-1.86328 -4.95312,-2.1582 c -2.72498,-1.18652 -5.7691,-2.16388 -6.76368,-2.17188 -2.7763,-0.0237 -4.074,-1.23555 -4.85546,-4.5332 -0.39308,-1.65873 -1.03378,-3.47063 -1.42383,-4.02539 -0.39006,-0.55477 -2.31112,-5.09309 -4.26758,-10.08594 -4.527508,-11.55414 -7.03155,-23.89676 -5.527344,-27.23828 0.852416,-1.89362 0.746124,-2.73079 -0.509765,-4.00195 -1.902762,-1.92592 -3.116108,-7.70388 -2.28125,-10.86524 0.343742,-1.30164 3.886313,-4.6517 8.27539,-7.82422 4.221229,-3.05116 9.270139,-7.16937 11.218749,-9.15234 3.85583,-3.92382 27.10126,-24.33316 31.63281,-27.77344 1.5415,-1.17025 3.71351,-2.41687 4.82813,-2.77148 1.11463,-0.35463 2.82476,-2.01067 3.79883,-3.67969 1.66113,-2.84627 1.81421,-10.81934 2.46289,-128.45703 0.60171,-109.11977 0.88532,-125.65751 2.18164,-127.23828 0.8195,-0.9993 1.80461,-4.81121 2.1914,-8.4707 1.19491,-11.3056 1.94691,-14.64852 3.75977,-16.74024 0.9616,-1.10952 2.02826,-3.52898 2.37109,-5.37695 0.34283,-1.84798 1.52401,-4.51882 2.625,-5.93555 1.10101,-1.41672 2.00196,-3.36721 2.00196,-4.33398 0,-0.96679 0.672,-2.32306 1.49414,-3.01368 0.82215,-0.69059 1.49609,-1.80431 1.49609,-2.4746 0,-1.77453 18.79048,-22.74219 20.38086,-22.74219 0.38953,0 2.57866,-1.53225 4.86328,-3.40625 2.28463,-1.87399 5.27429,-3.74363 6.64453,-4.1543 1.37023,-0.41067 3.1642,-1.32255 3.98633,-2.02734 0.82215,-0.70478 2.90726,-1.58621 4.63281,-1.95703 1.79238,-0.38516 3.33572,-1.44562 3.60157,-2.47461 0.3666,-1.41888 1.89873,-1.93644 7.2207,-2.43946 3.84564,-0.36348 7.4802,-1.30069 8.43555,-2.17578 1.0539,-0.96537 3.61925,-1.53711 6.89648,-1.53711 2.87037,0 5.97335,-0.39731 6.89649,-0.88281 0.92309,-0.48549 9.0795,-1.19493 18.12304,-1.57617 9.04355,-0.38125 17.56337,-0.96541 18.9336,-1.29688 3.85436,-0.9324 10.32061,-4.52344 11.76562,-6.53515 0.7162,-0.99707 2.38835,-1.8125 3.71484,-1.8125 1.47299,0 3.04603,-0.9834 4.04297,-2.52344 1.08623,-1.67795 2.54939,-2.52148 4.37305,-2.52148 1.50733,0 3.84871,-0.88062 5.20312,-1.95899 1.35446,-1.07837 4.89023,-2.28221 7.85743,-2.67383 3.64192,-0.48066 6.06922,-1.44022 7.4707,-2.95312 1.59971,-1.72688 4.11593,-2.53464 10.96289,-3.52149 4.88721,-0.7044 9.35639,-1.86068 9.93164,-2.56836 0.57525,-0.70766 3.71518,-1.51615 6.97656,-1.79882 3.26142,-0.28266 7.37317,-1.04133 9.13868,-1.68555 2.26302,-0.82577 13.39859,-1.07227 24.18359,-0.89258 z m -114.0918,35.20117 c -0.82214,0 -1.49414,0.45306 -1.49414,1.00782 0,0.55476 0.672,1.00976 1.49414,1.00976 0.82214,0 1.49414,-0.455 1.49414,-1.00976 0,-0.55476 -0.672,-1.00782 -1.49414,-1.00782 z m 116.53516,94.35743 c 1.3238,-0.21856 2.55078,1.0396 2.55078,3.08593 0,1.90221 -0.52882,2.41406 -2.49219,2.41407 -2.68454,0 -3.4511,-2.66035 -1.37304,-4.76368 0.42106,-0.42618 0.87318,-0.66349 1.31445,-0.73632 z m 32.32617,0.0664 c 1.28539,0.15307 1.9505,0.79566 3.28125,2.08008 2.58235,2.49244 2.69791,2.5111 3.86523,0.61914 1.01601,-1.64668 1.89607,-1.84337 5.64454,-1.26758 2.44211,0.37512 10.90389,0.51507 18.80468,0.31055 11.75849,-0.30436 14.36524,-0.11933 14.36524,1.02539 0,0.85159 -1.55899,1.65204 -3.98633,2.04492 -2.19237,0.35483 -3.98633,1.16241 -3.98633,1.79492 0,0.82902 2.9207,0.96892 10.46094,0.50196 6.38618,-0.39551 12.44959,-0.21606 15.56836,0.46093 6.29083,1.36556 14.95291,5.1629 16.73633,7.33789 2.13678,2.60602 4.07226,1.96698 4.07226,-1.3457 0,-5.9529 2.336,-4.11132 4.40235,3.4707 0.30237,1.10952 1.00365,6.46118 1.55859,11.89454 1.12058,10.97174 2.586,14.7209 7.06445,18.07226 6.75869,5.05769 8.60246,16.4922 5.00782,31.05664 -2.85184,11.55471 -3.37566,18.99951 -2.07227,29.48047 1.37062,11.02147 0.22364,21.60698 -3.04687,28.0957 -2.32334,4.60951 -4.67265,5.15257 -5.125,1.18555 -0.19318,-1.69413 -1.00517,-2.89765 -2.09766,-3.10742 -1.46317,-0.28095 -1.66836,0.12562 -1.13867,2.26172 0.53666,2.16425 0.30141,2.60351 -1.39649,2.60351 -1.12326,0 -2.31945,-0.455 -2.6582,-1.00976 -0.8138,-1.33279 -6.78977,-1.29665 -8.11914,0.0488 -1.99208,2.01626 -13.7895,-5.3955 -16.37695,-10.28907 -1.56852,-2.96642 -0.72631,-3.19292 5.21484,-1.40039 4.01674,1.21192 7.35633,1.44233 13.55469,0.9375 7.90538,-0.64387 8.30268,-0.79618 10.21484,-3.92773 1.96746,-3.22214 2.68817,-7.58925 1.24219,-7.52735 -0.41107,0.0176 -2.25439,1.56598 -4.09571,3.43946 -3.94433,4.01326 -9.99556,5.87427 -15.21874,4.68164 -6.47934,-1.47944 -8.22527,-4.11719 -2.72461,-4.11719 5.80876,0 11.22526,-2.39973 16.05273,-7.10937 2.81425,-2.74555 4.74023,-5.52044 4.74023,-6.82813 0,-1.21151 0.43669,-2.20117 0.97071,-2.20117 1.61454,0 3.7348,-5.21626 4.50976,-11.0957 0.40219,-3.05119 1.34498,-8.49757 2.09375,-12.10352 3.06406,-14.75618 0.93628,-21.49607 -7.07617,-22.42578 -4.1422,-0.48064 -6.03227,0.26757 -14.42187,5.7168 -7.8295,5.08538 -13.36594,7.47877 -18.97657,8.20312 -3.00658,0.38816 -6.23545,1.10793 -7.17578,1.59766 -1.33865,0.69719 -2.04642,0.22822 -3.26367,-2.1543 -0.85505,-1.67359 -1.98499,-3.04297 -2.50977,-3.04297 -0.52476,0 -2.08981,2.27114 -3.47851,5.04492 -4.14182,8.27289 -7.14636,6.58201 -10.42969,-5.86523 -0.63123,-2.39302 -1.62642,-4.1894 -2.21094,-3.99219 -0.58453,0.19721 -1.8697,2.99782 -2.85546,6.22266 -1.81743,5.94535 -5.19133,10.69531 -7.59766,10.69531 -0.93697,0 -1.32227,-1.61426 -1.32227,-5.54883 0,-6.0006 -0.54693,-6.55573 -3.61132,-3.66601 -3.97195,3.74541 -5.94118,4.28656 -7.84766,2.15429 -1.37622,-1.53918 -2.15956,-1.72945 -3.69727,-0.89648 -1.50342,0.81442 -2.38782,0.65424 -3.86328,-0.69727 -1.60216,-1.46755 -2.33996,-1.55699 -4.51758,-0.55273 -1.43098,0.65992 -3.44013,0.92943 -4.46679,0.59961 -1.02666,-0.32981 -3.10533,0.069 -4.61914,0.88672 -10.96405,5.92265 -19.09324,6.84263 -27.16797,3.07226 -10.24114,-4.78188 -18.13,-6.65887 -24.35742,-5.79492 -5.21551,0.72356 -6.51361,1.93366 -4.04102,3.76367 1.54073,1.14032 1.2395,1.8661 -3.27148,7.89844 -2.73235,3.65384 -5.21756,7.25771 -5.52149,8.00781 -0.43449,1.07227 -0.85574,0.98546 -1.9707,-0.40234 -1.92507,-2.39613 -3.4187,-2.21662 -4.23438,0.50586 -0.37397,1.24821 -1.52783,3.20663 -2.5625,4.35351 -1.85182,2.05264 -1.84179,2.12066 0.61329,4.28125 1.37169,1.2072 2.49414,2.61083 2.49414,3.11914 0,1.21412 9.1197,1.11377 10.66015,-0.11718 0.75159,-0.60062 1.83348,-0.59191 2.91992,0.0234 1.30916,0.74155 2.14683,0.4562 3.47657,-1.18164 1.29812,-1.59891 2.13542,-1.89564 3.22851,-1.14843 0.81155,0.55476 3.86667,2.64734 6.78906,4.65039 3.21423,2.20302 7.08617,3.894 9.79883,4.27929 14.02421,1.9919 15.94336,2.49167 15.94336,4.1543 0,1.29002 -5.47874,3.53774 -8.66015,3.55274 -0.65276,0.003 -1.49996,0.51945 -1.88282,1.14648 -0.49923,0.81761 1.03416,1.01265 5.42188,0.69141 3.36503,-0.24637 6.11719,-0.0896 6.11719,0.34765 0,1.0402 -4.35544,3.17165 -9.96485,4.87696 -5.4991,1.67175 -6.69986,2.60385 -4.20703,3.26367 2.46886,0.65348 15.38225,-3.81995 26.13086,-9.05078 4.65881,-2.26723 10.19649,-4.83684 12.30469,-5.71094 3.66877,-1.52115 3.85538,-1.50252 4.35156,0.41797 0.64042,2.4787 2.12165,2.59724 2.99023,0.24023 0.35778,-0.97083 1.46568,-2.35713 2.46094,-3.08203 0.99527,-0.72492 1.81055,-2.14611 1.81055,-3.15625 0,-2.51711 1.53259,-3.57165 8.30273,-5.71094 7.85334,-2.48154 10.18567,-1.19322 12.66797,6.99219 0.9816,3.23684 2.02815,6.13001 2.32422,6.42969 0.29609,0.29967 1.27653,-1.32469 2.17969,-3.60938 1.94396,-4.91748 3.03768,-4.59504 4.51172,1.33008 1.0707,4.30384 4.10596,7.09004 12.54882,11.51758 3.38635,1.77584 5.10334,1.33162 2.70313,-0.69922 -2.48348,-2.10129 -4.38086,-5.45151 -4.38086,-7.73437 0,-2.4723 1.41183,-1.14198 7.54883,7.11132 3.07967,4.14171 6.34011,8.0921 7.24609,8.7793 4.03913,3.06377 14.32766,15.38154 16.05078,19.2168 3.97532,8.84795 8.06657,19.59319 9.48633,24.91601 6.80275,25.50403 6.89168,26.06055 6.83008,42.34766 -0.0699,18.50179 -0.93436,23.56143 -4.10352,24.02539 -1.21087,0.17727 -2.20117,-0.0894 -2.20117,-0.59375 0,-1.42349 -4.84786,-3.32721 -11.97851,-4.70508 -10.11535,-1.95462 -36.7666,0.0771 -70.23633,5.35547 -10.41378,1.64233 -22.74549,3.26939 -27.4043,3.61523 -4.65878,0.34584 -10.04064,0.7936 -11.95898,0.9961 -1.91833,0.2025 -5.28028,-0.0156 -7.47266,-0.48633 -2.19238,-0.47074 -5.65317,-0.88206 -7.68945,-0.91406 -5.18877,-0.0815 -9.84402,-4.5155 -13.38477,-12.74805 -2.44799,-5.69178 -3.15131,-6.55268 -5.0625,-6.18359 -1.45011,0.28005 -2.4016,-0.1482 -2.74219,-1.23438 -0.94949,-3.02806 -2.45112,-16.61547 -2.48242,-22.46875 -0.0314,-5.87304 -2.78788,-16.93554 -4.2207,-16.93555 -0.4353,0 -0.79297,-1.53253 -0.79297,-3.40624 0,-1.87374 -0.67199,-3.97153 -1.49414,-4.66211 -0.82215,-0.69062 -1.49414,-2.5835 -1.49414,-4.20508 0,-1.81244 -0.97511,-3.9347 -2.53125,-5.50977 -3.24276,-3.28217 -2.55496,-6.92267 1.13086,-5.98633 1.31856,0.33496 2.39648,0.16821 2.39648,-0.37109 0,-0.5393 1.61065,-1.75525 3.58008,-2.70117 2.81933,-1.35413 3.74781,-1.44813 4.36133,-0.44336 1.05844,1.73343 3.9026,0.66818 7.77539,-2.91211 3.57551,-3.30545 4.02477,-4.79521 1.5918,-5.2832 -1.20903,-0.24249 -0.45116,-1.47773 2.95508,-4.81641 2.51943,-2.46951 4.40254,-4.66904 4.18554,-4.88867 -0.21699,-0.21963 -3.89986,0.72371 -8.18554,2.09765 -10.54104,3.37939 -15.29464,4.02458 -17.21485,2.33594 -0.84728,-0.74512 -3.68876,-1.58489 -6.31445,-1.86719 -2.6257,-0.28229 -5.63368,-1.30212 -6.68555,-2.26562 -1.29237,-1.18373 -2.73462,-1.54396 -4.44531,-1.10938 -1.85908,0.47228 -2.53125,0.24565 -2.53125,-0.85351 0,-0.82319 -0.88234,-1.97435 -1.96094,-2.55859 -1.0786,-0.58427 -3.09882,-2.13034 -4.49023,-3.43555 -11.28685,-10.58753 -12.81367,-20.60348 -5.5586,-36.46875 1.97707,-4.32343 3.05014,-8.65015 3.51758,-14.1836 0.88533,-10.48039 1.97181,-13.7342 6.34375,-19.00586 2.00444,-2.41689 4.54052,-5.62358 5.63672,-7.125 1.09619,-1.50139 3.22712,-3.9156 4.73438,-5.36523 1.50724,-1.44962 2.74023,-3.1601 2.74023,-3.80078 0,-0.64068 0.70952,-1.76028 1.57617,-2.48828 1.27391,-1.07019 1.95963,-1.08143 3.58399,-0.0547 2.45812,1.55382 3.61429,0.64609 2.16601,-1.70117 -1.43181,-2.32059 -0.11433,-5.60992 3.16797,-7.91211 1.46202,-1.02546 4.41906,-3.40393 6.57227,-5.28516 3.68574,-3.22019 3.81824,-3.52788 2.27148,-5.25781 -2.01954,-2.25871 -1.1731,-4.9375 1.55859,-4.9375 1.49495,0 2.02344,0.6593 2.02344,2.52149 0,3.24223 1.08474,3.18142 4.73047,-0.26563 3.24327,-3.06651 19.0199,-11.33398 21.62891,-11.33398 0.90292,0 2.99788,-0.70918 4.65429,-1.57618 2.06656,-1.08165 3.39169,-1.25889 4.22071,-0.5625 1.28042,1.07559 3.97747,0.6171 13.95117,-2.37109 3.2096,-0.96161 9.26346,-2.35378 13.45312,-3.09375 3.80763,-0.67249 5.71266,-1.00854 6.99805,-0.85547 z m 58.39258,10.98828 c -2.94922,-0.15559 -5.70296,-0.0502 -7.82031,0.33789 -0.47819,0.0876 -0.31505,0.83328 0.36132,1.65821 0.72127,0.87965 0.9616,2.57873 0.58204,4.10937 -0.56804,2.29058 -0.36828,2.57049 1.63281,2.2832 1.47828,-0.21223 2.39117,-1.12413 2.59765,-2.5957 0.42771,-3.04811 1.998,-2.87102 3.21289,0.36328 0.91546,2.43714 1.30845,2.58395 5.27149,1.98242 3.54468,-0.53802 4.59727,-0.2954 6.11523,1.40235 1.00864,1.1281 2.34754,2.05078 2.97461,2.05078 0.62708,0 3.13667,1.32614 5.57617,2.94726 2.43954,1.62114 4.58628,2.9822 4.77149,3.0254 0.1852,0.0431 0.0245,-1.84931 -0.35742,-4.20704 -1.15273,-7.11668 -4.30234,-9.51646 -15.92383,-12.13281 -2.89973,-0.6528 -6.04492,-1.06902 -8.99414,-1.22461 z m 15.40625,17.83008 c -2.76028,0.43865 -2.6781,2.08667 0.17773,3.58203 2.63325,1.37881 6.88103,1.70001 6.83203,0.51758 -0.062,-1.49733 -5.046,-4.41166 -7.00976,-4.09961 z m 1.9707,18.97852 c -3.04103,0 -8.36173,2.54827 -10.82031,5.18359 -2.80054,3.00185 -6.14864,9.4937 -5.32617,10.32617 0.34191,0.34607 0.98401,0.62891 1.42578,0.62891 1.85768,0 11.63427,-5.31645 15.50586,-8.43164 3.95701,-3.18397 4.10308,-3.48585 2.68359,-5.53711 -0.82577,-1.1933 -2.38604,-2.16992 -3.46875,-2.16992 z m -121.96875,12.32031 c -2.31654,-0.006 -3.1951,1.35974 -0.625,2.75195 2.71592,1.47119 2.66711,2.69322 -0.14062,3.45703 -2.21425,0.60234 -2.20624,0.64118 0.74609,3.10743 1.64429,1.37353 3.68561,2.51515 4.53516,2.53515 0.84954,0.02 1.96954,0.45121 2.49023,0.95899 0.52069,0.50779 2.06924,1.1513 3.43945,1.42968 3.9338,0.79918 13.29631,-0.27944 14.16016,-1.63086 2.1935,-3.43154 -1.59673,-6.29375 -12.16797,-9.1875 -3.56259,-0.97522 -7.93389,-2.28369 -9.71484,-2.9082 -1.01727,-0.35672 -1.95048,-0.51151 -2.72266,-0.51367 z m -16.97265,20.43555 c 0.16721,0.0707 0.18012,0.25513 0.006,0.54101 -0.33482,0.5484 -1.03113,0.99805 -1.54687,0.99805 -1.43345,0 -1.11702,-0.72398 0.60937,-1.39453 0.44341,-0.17222 0.76443,-0.21522 0.93165,-0.14453 z m 137.28515,6.59765 c 2.78229,0.0342 9.82748,2.69086 11.42578,4.3086 2.12652,2.15237 1.34171,2.09692 -6.44336,-0.44727 -5.58537,-1.82534 -8.2652,-3.90163 -4.98242,-3.86133 z m -121.32812,3.00977 c 3.26995,0 4.46033,2.83863 1.96484,4.68554 -2.41885,1.79022 -4.37907,1.73345 -5.0918,-0.14648 -0.95765,-2.52595 0.42883,-4.53906 3.12696,-4.53906 z m 107.4082,1.02344 c 1.50305,-0.0298 1.98732,3.22359 0.61133,4.10546 -2.01895,1.29395 -2.86826,1.12948 -3.5586,-0.6914 -0.56172,-1.48161 1.07364,-3.37689 2.94727,-3.41406 z m -43.18945,3.01171 c 0.51574,0 1.21398,0.45306 1.55273,1.00782 0.33874,0.55476 -0.083,1.00976 -0.9375,1.00976 -0.85449,0 -1.55469,-0.455 -1.55469,-1.00976 0,-0.55476 0.42371,-1.00782 0.93946,-1.00782 z m 66.43359,11.37696 c 0.31785,-0.003 0.39258,0.31028 0.39258,0.93945 0,1.91859 -3.77968,5.43539 -7.28906,6.78125 -3.82636,1.4674 -12.48976,1.21199 -16.12891,-0.47461 -1.64428,-0.76207 -2.76625,-1.42059 -2.49219,-1.46289 0.27404,-0.0423 3.63797,-0.32191 7.47461,-0.62109 7.62412,-0.59453 12.72509,-1.91802 16.19336,-4.20118 0.9708,-0.63906 1.53176,-0.95769 1.84961,-0.96093 z M 228.2793,379.08789 c -0.23453,-0.27964 -0.67749,0.0718 -1.51172,0.83594 -0.9748,0.8929 -2.65576,1.6395 -3.73633,1.6582 -4.97894,0.0858 -9.40949,1.40013 -9.90039,2.9375 -1.08582,3.40048 -7.36851,9.22266 -9.95117,9.22266 -5.66489,0 -1.62534,3.52459 5.72461,4.99414 7.75813,1.55118 9.06049,1.27429 12.8457,-2.72461 4.63913,-4.90106 6.79102,-9.32671 6.79102,-13.97461 0,-1.75885 -0.0272,-2.66958 -0.26172,-2.94922 z M 487.48828,399.875 c -0.48051,0.1787 -0.8457,1.00994 -0.8457,2.40234 0,3.76145 -3.33375,6.18065 -14.88477,10.80469 -8.65706,3.46557 -11.76538,4.22766 -17.50195,4.28906 -3.83666,0.0411 -8.76855,-0.4634 -10.96094,-1.12109 -9.07082,-2.72114 -18.09697,-5.26282 -20.50195,-5.77344 -1.41031,-0.29943 -4.28074,-1.72227 -6.37695,-3.16211 -4.36422,-2.99762 -5.94199,-2.01728 -4.32227,2.68555 1.52463,4.42677 6.54175,8.18874 17.32031,12.98438 7.68688,3.42005 11.32008,4.46562 16.28516,4.68945 3.51482,0.15845 6.85737,0.76254 7.42969,1.34179 2.9681,3.00424 26.39592,-5.88792 32.20312,-12.22265 3.70786,-4.04473 5.37146,-10.98126 3.69531,-15.40235 -0.46266,-1.22034 -1.05855,-1.69432 -1.53906,-1.51562 z m 7.18555,24.12695 c -0.58044,0 -1.05469,0.45501 -1.05469,1.00977 0,0.55476 0.19775,1.00781 0.43945,1.00781 0.2417,0 0.71595,-0.45305 1.05469,-1.00781 0.33875,-0.55476 0.14099,-1.00977 -0.43945,-1.00977 z m 7.23633,35.40821 c -1.4072,0.0466 -2.99706,1.01348 -4.78125,2.89843 -2.1194,2.2391 -3.43265,2.85487 -5.16016,2.41602 -1.61098,-0.40925 -2.5088,-0.0823 -2.94727,1.07422 -0.91302,2.40831 0.3835,3.2137 2.75782,1.71289 1.69219,-1.06969 1.97859,-1.06205 1.61914,0.0391 -0.24023,0.73585 -1.93443,1.56442 -3.76563,1.8418 -4.80693,0.72814 -4.6263,2.25043 0.51953,4.39258 2.47319,1.02956 6.03113,2.92685 7.90625,4.21484 1.87517,1.288 4.6695,2.50196 6.21094,2.69922 1.54142,0.19727 3.11438,0.11802 3.49609,-0.17774 1.24874,-0.96747 1.07817,-8.49984 -0.31054,-13.65039 -1.36371,-5.05775 -3.19962,-7.53866 -5.54492,-7.46093 z m -28.18946,19.56445 c -23.52366,0 -28.57201,0.5211 -53.8457,5.55469 -17.70764,3.52669 -34.69869,5.38866 -41.06836,4.50195 -5.455,-0.75938 -6.34462,0.57701 -2.03125,3.04883 5.65404,3.24008 24.73979,1.19725 56.55273,-6.05469 3.8374,-0.87476 14.3775,-1.86104 23.42774,-2.19141 17.65169,-0.64432 29.29519,0.65613 41.39062,4.625 11.84488,3.88668 15.83956,2.62449 9.67383,-3.05859 -6.28808,-5.79589 -9.62855,-6.42578 -34.09961,-6.42578 z m 51.29688,9.17578 c 0.74462,-0.2833 1.92474,0.78033 4.89453,3.99414 6.83347,7.39498 9.5509,13.54253 9.5332,21.57422 -0.0301,13.71446 -7.80948,27.74764 -20.90429,37.71094 -3.40197,2.58838 -7.01683,4.70703 -8.03321,4.70703 -1.67888,0 -1.72439,-0.25347 -0.49804,-2.77344 0.7424,-1.5256 2.02949,-5.4976 2.86132,-8.82617 0.8318,-3.32857 2.63283,-9.22998 4.00196,-13.11328 1.36914,-3.88334 3.43647,-11.74693 4.59375,-17.47656 1.15726,-5.72966 2.73023,-11.40451 3.49414,-12.60938 1.19159,-1.87931 1.18127,-2.80104 -0.0703,-6.49023 -0.97275,-2.86734 -1.14816,-4.86619 -0.52343,-5.9961 0.20129,-0.36407 0.40218,-0.60674 0.65039,-0.70117 z m -70.01367,31.87109 c 0.17543,-0.0672 0.45245,0.10962 0.85937,0.52149 0.60974,0.61718 0.93666,1.64522 0.72656,2.2832 -0.49524,1.50379 -1.83593,0.14765 -1.83593,-1.85742 0,-0.56766 0.0746,-0.8801 0.25,-0.94727 z m -13.20508,2.32618 c 0.5481,-0.34286 0.99609,0.0565 0.99609,0.88867 0,0.83214 -0.44799,1.79385 -0.99609,2.13672 -0.54809,0.34286 -0.9961,-0.0585 -0.9961,-0.89063 0,-0.83214 0.44801,-1.79189 0.9961,-2.13476 z m 105.16211,52.58007 c 1.6762,-0.22709 1.67858,14.40702 0.004,30.12891 -0.88651,8.3214 -1.95003,22.26309 -2.36328,30.98047 -0.69276,14.61402 -1.26448,18.16501 -2.6914,16.7207 -0.29657,-0.30018 -1.81551,-4.19645 -3.375,-8.66015 -1.55952,-4.46373 -3.44601,-8.87626 -4.19336,-9.80469 -3.48313,-4.32698 -6.32252,-6.54102 -8.38477,-6.54102 -3.47387,0 -8.38552,8.10572 -17.83789,29.43946 -1.39813,3.15551 -2.54102,6.03756 -2.54102,6.40234 1e-5,0.36479 -0.92899,1.98057 -2.0625,3.5918 -3.44999,4.904 -11.85867,3.56658 -11.92187,-1.89649 -0.0174,-1.50608 -0.73207,-3.64633 -1.58789,-4.75586 -1.43169,-1.85611 -1.49875,-1.34212 -0.84961,6.42578 0.55409,6.63078 0.41384,8.62953 -0.6543,9.31446 -0.74799,0.47965 -3.48121,0.87872 -6.07422,0.88672 -5.59228,0.0183 -5.3844,0.54005 -6.25585,-15.65821 l -0.59961,-11.13476 3.61132,-1.74219 c 4.03599,-1.94803 5.4668,-1.56264 5.4668,1.47266 0,2.17242 2.95946,7.91406 4.08008,7.91406 0.36342,0 1.2193,-1.36309 1.90039,-3.02734 0.68108,-1.66429 1.6137,-3.0254 2.07422,-3.0254 0.46053,0 5.13551,-4.0872 10.38867,-9.08398 5.25315,-4.99679 10.66983,-9.82759 12.03711,-10.73438 1.36729,-0.90674 2.95254,-2.52944 3.52148,-3.60546 1.00085,-1.89284 0.73255,-1.93324 -8.26172,-1.25 -12.71806,0.9661 -25.58462,3.1137 -27.30468,4.55859 -0.78391,0.65851 -1.42578,2.40403 -1.42578,3.87695 0,3.58545 -2.2274,6.59701 -6.07227,8.20899 -2.8319,1.18727 -3.30637,1.12741 -4.53711,-0.57617 -1.78304,-2.46813 -1.27805,-3.8087 1.70508,-4.52149 1.84234,-0.44021 2.54695,-1.44058 3,-4.26172 0.78228,-4.87119 2.15592,-6.37249 7.72852,-8.44336 8.21239,-3.05182 20.74976,-9.21821 27.74804,-13.64843 15.70752,-9.94355 24.89638,-19.28797 32.24219,-32.78907 1.38539,-2.5462 2.95338,-4.68952 3.48633,-4.76172 z m -300.41211,9.03907 c 0.49493,-0.53694 2.2036,0.1975 4.12305,1.77148 25.13535,20.61145 50.44555,32.67331 87.26757,41.5918 20.7403,5.0234 29.93627,6.51792 45.5625,7.39844 12.96757,0.73067 14.46107,1.02723 21.17578,4.21679 11.58423,5.5027 10.67163,8.85216 -3.02734,11.10547 -4.68479,0.7706 -9.22886,2.22725 -11.46094,3.67578 l -3.69726,2.40039 4.98242,-0.60937 c 16.08467,-1.96685 17.15547,-1.9449 18.37695,0.36523 1.34633,2.54625 2.97374,19.20259 1.93946,19.84961 -1.30692,0.81754 -3.8738,-0.77759 -3.9375,-2.44726 -0.0463,-1.21515 -0.28969,-1.09019 -0.91211,0.46875 -0.75893,1.90086 -1.9483,2.20116 -11.22461,2.83007 -14.15785,0.95992 -108.11788,0.47648 -112.00196,-0.57617 -1.78755,-0.48446 -3.33582,-1.67541 -3.62304,-2.78711 -0.27797,-1.07591 -2.55192,-2.88777 -5.09961,-4.0625 -2.52874,-1.16599 -4.60524,-2.44936 -4.61524,-2.85156 -0.0798,-3.19409 -3.23987,-22.70635 -4.49218,-27.73633 -3.40758,-13.68635 -9.41286,-30.38945 -16.21875,-45.11328 -2.22507,-4.81366 -3.59194,-8.9752 -3.11719,-9.49023 z m 367.97851,20.58593 c -0.88081,0 -5.58428,3.97901 -11.59179,9.80665 l -5.78516,5.61132 3.54297,2.95508 c 1.94813,1.62535 3.54101,3.60279 3.54102,4.39453 0,2.14373 3.32197,1.7395 4.75195,-0.57812 0.68458,-1.10952 1.68897,-2.01758 2.23242,-2.01758 1.65065,0 1.10524,2.82723 -0.81641,4.23047 -2.40548,1.75658 -3.43277,3.61433 -2.67968,4.84765 0.33875,0.55476 0.9485,1.00977 1.35546,1.00977 1.43521,0 13.06627,-12.3434 12.50196,-13.26758 -0.74397,-1.21841 -4.65906,0.0202 -5.68555,1.79883 -1.0617,1.83967 -2.6914,1.76093 -2.69141,-0.13086 10e-6,-0.83214 0.43961,-1.51367 0.97657,-1.51367 0.53696,0 1.93248,-1.89732 3.10156,-4.2168 1.84844,-3.66724 1.93419,-4.36042 0.65039,-5.31054 -0.81197,-0.60096 -1.79602,-2.56045 -2.18555,-4.35547 -0.38952,-1.79505 -0.93768,-3.26368 -1.21875,-3.26368 z m -1.38672,10.27539 c 0.74741,-0.25213 1.12219,0.12632 0.87305,0.88282 -0.23979,0.72812 -1.02477,1.5229 -1.74414,1.76562 -0.74739,0.25216 -1.12218,-0.12631 -0.87305,-0.88281 0.23981,-0.72812 1.0248,-1.52292 1.74414,-1.76563 z m -2.98632,3.84571 c 0.58043,0 1.05664,0.45305 1.05664,1.00781 0,0.55476 -0.19776,1.00977 -0.43946,1.00977 -0.24171,0 -0.71789,-0.45501 -1.05664,-1.00977 -0.33875,-0.55476 -0.14099,-1.00781 0.43946,-1.00781 z m -1.49219,2.01758 c 0.31473,0 0.0127,0.90808 -0.67188,2.01757 -1.28344,2.08017 -3.75585,2.76624 -3.75585,1.04297 0,-0.90177 3.12363,-3.06054 4.42773,-3.06054 z m 22.00195,2.43554 c -1.05615,0.50393 -4.31363,3.45305 -9.48828,8.70899 -5.48092,5.56701 -9.96484,10.5564 -9.96484,11.08789 0,3.44052 6.30243,-2.10384 15.73242,-13.83985 3.63165,-4.5197 4.77686,-6.46095 3.7207,-5.95703 z m -506.96289,0.58985 c -0.62792,0 -0.54804,0.59757 0.20313,1.51367 1.35385,1.65114 3.98633,2.05453 3.98632,0.61133 0,-0.92858 -2.35885,-2.125 -4.18945,-2.125 z m 510.67774,4.03515 c -1.0302,4e-5 -6.77816,7.38663 -6.47461,8.32032 0.13504,0.41531 -2.72893,3.64891 -6.36524,7.1875 -4.18686,4.07435 -6.33655,6.88312 -5.86328,7.6582 0.98512,1.61334 7.39762,-4.6803 12.17578,-11.94922 1.96143,-2.9839 4.40182,-6.14917 5.42188,-7.0332 1.84662,-1.60035 2.52865,-4.18366 1.10547,-4.1836 z m -176.85743,3.21485 c 0.55795,0.0424 0.92039,0.33074 1.25391,0.87695 0.49496,0.8106 0.40515,1.92553 -0.21484,2.68164 -0.58385,0.71206 -1.5656,1.2183 -2.1836,1.125 -0.61802,-0.0933 -3.81498,-0.44019 -7.10351,-0.77148 l -5.97852,-0.60157 4.48438,-0.80273 c 2.46639,-0.44143 5.75851,-1.30071 7.3164,-1.91016 1.11472,-0.43608 1.86784,-0.64008 2.42578,-0.59765 z m 178.88477,3.41406 c -0.27693,0.18405 -0.52574,0.62895 -0.74805,1.33789 -0.36543,1.16537 -1.08258,2.11914 -1.59375,2.11914 -0.51115,0 -0.92968,0.50288 -0.92968,1.11719 0,1.2137 -12.7821,14.01367 -13.99415,14.01367 -1.06179,0 -2.0656,3.03039 -1.37695,4.1582 0.98806,1.61819 10.1194,-7.19748 16.47852,-15.91015 2.73096,-3.74178 3.74943,-5.926 3.08008,-6.60352 -0.33469,-0.33876 -0.63909,-0.41647 -0.91602,-0.23242 z m -105.34766,1.79297 c 0.30523,0.0303 0.42969,0.57412 0.42969,1.54492 0,1.10952 -0.39435,2.26378 -0.875,2.56445 -0.48064,0.30066 -1.87919,3.16398 -3.10937,6.36328 -1.23016,3.19933 -4.02346,9.56189 -6.20703,14.13868 -2.18359,4.57675 -4.38652,8.32226 -4.89454,8.32226 -0.50801,0 -1.31293,-1.02132 -1.78906,-2.26953 -0.68015,-1.78301 -0.35237,-2.76501 1.52734,-4.58008 1.31596,-1.27067 2.39258,-3.17418 2.39258,-4.22851 0,-1.05433 0.4202,-2.17885 0.9336,-2.5 0.51338,-0.32115 1.55441,-1.82334 2.31445,-3.33789 5.80534,-11.56844 8.36165,-16.10845 9.27734,-16.01758 z m -97.95117,3.24023 c 5.10129,0.21986 10.55416,0.60954 12.67774,1.01172 0.82214,0.15571 4.74701,0.31883 8.7207,0.36133 3.97369,0.0425 7.22461,0.48494 7.22461,0.98437 0,1.09969 -7.24265,2.80475 -15.62891,3.67774 -9.72036,1.01187 -9.8416,1.21276 -8.34961,13.95508 0.69304,5.91943 0.98295,11.8852 0.64258,13.25781 -0.80499,3.24638 -4.33986,3.4066 -5.00195,0.22656 -0.25988,-1.24821 -0.96128,-5.6733 -1.5586,-9.83398 -1.63036,-11.35675 -1.86461,-12.10352 -3.7871,-12.10352 -1.03557,0 -2.21719,-1.24246 -2.88282,-3.02734 -0.62064,-1.66429 -1.84119,-3.02539 -2.71094,-3.02539 -2.15158,0 -2.08039,-4.63396 0.084,-5.47461 0.71995,-0.27964 5.46904,-0.22916 10.57031,-0.01 z m 101.20313,4.99024 c 0.72919,-1.25441 1.92915,2.97881 2.06054,7.26758 0.071,2.31826 -0.49139,3.56374 -1.97461,4.36718 -2.02386,1.09633 -2.05812,0.97984 -1.37109,-4.75586 0.38734,-3.23365 0.96594,-6.32972 1.28516,-6.8789 z m -117.48438,11.58984 c 0.58044,0 1.05664,0.45305 1.05664,1.00781 0,0.55476 -0.19775,1.00977 -0.43945,1.00977 -0.2417,0 -0.7179,-0.45501 -1.05664,-1.00977 -0.33875,-0.55476 -0.14099,-1.00781 0.43945,-1.00781 z M 189.5625,671.41406 c 0.53576,0.0516 1.0608,0.25982 1.52344,0.64844 0.86808,0.72921 1.57812,1.95063 1.57812,2.71484 0,0.92097 -1.20033,1.39063 -3.56054,1.39063 -2.76928,0 -3.48887,-0.36959 -3.23829,-1.6582 0.38865,-1.99873 2.08998,-3.25048 3.69727,-3.09571 z m 337.5957,0.71875 c 1.59493,0 1.66122,0.53274 0.3711,2.97266 -1.19438,2.25887 -3.73269,3.34748 -4.57813,1.96289 -0.77023,-1.26143 2.36176,-4.93555 4.20703,-4.93555 z" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
